apply plugin: 'java'

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath fileTree(dir: '../libs', include: ['*.jar'])
	}
}

apply plugin: 'com.github.j2objccontrib.j2objcgradle'

repositories {
	jcenter()
}

dependencies {
	compile 'javax.inject:javax.inject:1'
	compile 'com.squareup:javawriter:2.5.0'
	compile 'com.google.guava:guava:18.0'
	//compile 'com.google.auto:auto-common:1.0-SNAPSHOT'
	compile 'com.google.auto.service:auto-service:1.0-rc2'
	compile 'com.google.auto.value:auto-value:1.0'
	//compile 'com.google.dagger:dagger-producers:2.0-beta'

	// j2objcTranslation causes the entire specified library
	// to be translated and built into a standalone Objective C library.
	// j2objcTranslation must always be passed a *source* jar,
	// therefore, note the ':sources' classifier.
	j2objcTranslation 'com.google.dagger:dagger:2.0.1:sources'
	//j2objcTranslation 'com.google.dagger:dagger-compiler:2.0.1:sources'
}

j2objcConfig {
	translateArgs (
		'-use-arc',
		//'--prefixes', 'prefixes.properties',
	)
	extraObjcCompilerArgs '-fobjc-arc'

	xcodeProjectDir '../ios/feedarticle'
	xcodeTargetsIos 'feedarticle'

	autoConfigureDeps true

	forceFilenameCollisionCheck false
	// For now, default config links in prebuilt Guava; that defeats the point.
	translateJ2objcLibs.remove("j2objc_guava.jar")
	linkJ2objcLibs.remove("guava")


	// Almost always there are no tests provided in an external source jar.
	testMinExpectedTests 0
	finalConfigure()
}